\set VERBOSITY terse
SET citus.next_shard_id TO 1507000;
SET citus.shard_replication_factor TO 1;
SET citus.enable_local_execution TO ON;
SET citus.log_local_commands TO ON;
CREATE SCHEMA citus_local_table_triggers;
SET search_path TO citus_local_table_triggers;
-- ensure that coordinator is added to pg_dist_node
SET client_min_messages to ERROR;
SELECT 1 FROM master_add_node('localhost', :master_port, groupId => 0);
 ?column?
---------------------------------------------------------------------
        1
(1 row)

RESET client_min_messages;
CREATE TABLE citus_local_table (value int);
SELECT create_citus_local_table('citus_local_table');
 create_citus_local_table
---------------------------------------------------------------------

(1 row)

---------------------------------------------------------------------
-- DELETE trigger --
---------------------------------------------------------------------
CREATE TABLE distributed_table(value int);
SELECT create_distributed_table('distributed_table', 'value');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

CREATE FUNCTION insert_42() RETURNS trigger AS $insert_42$
BEGIN
    INSERT INTO distributed_table VALUES (42);
    RETURN NEW;
END;
$insert_42$ LANGUAGE plpgsql;
CREATE TRIGGER insert_42_trigger
AFTER DELETE ON citus_local_table
FOR EACH ROW EXECUTE PROCEDURE insert_42();
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1507000, 'citus_local_table_triggers', 'CREATE TRIGGER insert_42_trigger
AFTER DELETE ON citus_local_table
FOR EACH ROW EXECUTE PROCEDURE insert_42();')
-- select should print two rows with "42" as delete from citus_local_table will
-- insert 42 per deleted row
DELETE FROM citus_local_table;
NOTICE:  executing the command locally: DELETE FROM citus_local_table_triggers.citus_local_table_1507000 citus_local_table
SELECT * FROM distributed_table;
 value
---------------------------------------------------------------------
(0 rows)

---------------------------------------------------------------------
-- TRUNCATE trigger --
---------------------------------------------------------------------
CREATE TABLE reference_table(value int);
SELECT create_reference_table('reference_table');
 create_reference_table
---------------------------------------------------------------------

(1 row)

CREATE FUNCTION insert_100() RETURNS trigger AS $insert_100$
BEGIN
    INSERT INTO reference_table VALUES (100);
    RETURN NEW;
END;
$insert_100$ LANGUAGE plpgsql;
CREATE TRIGGER insert_100_trigger
AFTER TRUNCATE ON citus_local_table
FOR EACH STATEMENT EXECUTE PROCEDURE insert_100();
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1507000, 'citus_local_table_triggers', 'CREATE TRIGGER insert_100_trigger
AFTER TRUNCATE ON citus_local_table
FOR EACH STATEMENT EXECUTE PROCEDURE insert_100();')
-- As TRUNCATE triggers are executed by utility hook, it's critical to see that they
-- are executed only for once.
-- select should print a row with "100" as truncate from citus_local_table will insert 100
TRUNCATE citus_local_table;
NOTICE:  executing the command locally: TRUNCATE TABLE citus_local_table_triggers.citus_local_table_xxxxx CASCADE
NOTICE:  executing the command locally: INSERT INTO citus_local_table_triggers.reference_table_1507005 (value) VALUES (100)
SELECT * FROM reference_table;
NOTICE:  executing the command locally: SELECT value FROM citus_local_table_triggers.reference_table_1507005 reference_table
 value
---------------------------------------------------------------------
   100
(1 row)

---------------------------------------------------------------------
-- INSERT trigger --
---------------------------------------------------------------------
CREATE TABLE local_table(value int);
CREATE FUNCTION increment_value() RETURNS trigger AS $increment_value$
BEGIN
    UPDATE local_table SET value=value+1;
    RETURN NEW;
END;
$increment_value$ LANGUAGE plpgsql;
CREATE TRIGGER increment_value_trigger
AFTER INSERT ON citus_local_table
FOR EACH ROW EXECUTE PROCEDURE increment_value();
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1507000, 'citus_local_table_triggers', 'CREATE TRIGGER increment_value_trigger
AFTER INSERT ON citus_local_table
FOR EACH ROW EXECUTE PROCEDURE increment_value();')
-- insert initial data to the table that increment_value_trigger will execute for
INSERT INTO local_table VALUES (0);
-- select should print a row with "2" as insert into citus_local_table will
-- increment all rows per inserted row
INSERT INTO citus_local_table VALUES(0), (1);
NOTICE:  executing the command locally: INSERT INTO citus_local_table_triggers.citus_local_table_1507000 AS citus_table_alias (value) VALUES (0), (1)
SELECT * FROM local_table;
 value
---------------------------------------------------------------------
     2
(1 row)

---------------------------------------------------------------------
-- Test other trigger commands + weird object names --
---------------------------------------------------------------------
CREATE SCHEMA "interesting!schema";
CREATE TABLE "interesting!schema"."citus_local!_table"(value int);
SELECT create_citus_local_table('"interesting!schema"."citus_local!_table"');
 create_citus_local_table
---------------------------------------------------------------------

(1 row)

-- below view is an helper to print triggers on both shell relation and
-- shard relation for "citus_local_table"
CREATE OR REPLACE VIEW citus_local_table_triggers AS
    SELECT tgname, tgrelid::regclass, tgenabled
    FROM pg_trigger
    WHERE tgrelid::regclass::text like '"interesting!schema"."citus_local!_table%"'
    ORDER BY 1, 2;
CREATE FUNCTION dummy_function() RETURNS trigger AS $dummy_function$
BEGIN
    NEW.value := value+1;
    RETURN NEW;
END;
$dummy_function$ LANGUAGE plpgsql;
CREATE TRIGGER "trigger\'name"
BEFORE INSERT ON "interesting!schema"."citus_local!_table"
FOR EACH STATEMENT EXECUTE PROCEDURE dummy_function();
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1507006, 'interesting!schema', E'CREATE TRIGGER "trigger\\''name"
BEFORE INSERT ON "interesting!schema"."citus_local!_table"
FOR EACH STATEMENT EXECUTE PROCEDURE dummy_function();')
BEGIN;
    CREATE EXTENSION seg;
    -- ALTER TRIGGER DEPENDS ON
    ALTER TRIGGER "trigger\'name" ON "interesting!schema"."citus_local!_table" DEPENDS ON EXTENSION seg;
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1507006, 'interesting!schema', E'ALTER TRIGGER "trigger\\''name" ON "interesting!schema"."citus_local!_table" DEPENDS ON EXTENSION seg;')
    -- show that triggers on both shell relation and shard relation are depending on seg
    SELECT tgname FROM pg_depend, pg_trigger, pg_extension
    WHERE deptype = 'x' and classid='pg_trigger'::regclass and
        pg_trigger.oid=pg_depend.objid and extname='seg'
    ORDER BY 1;
        tgname
---------------------------------------------------------------------
 trigger\'name
 trigger\'name_1507006
(2 rows)

    DROP EXTENSION seg;
    -- show that dropping extension drops the triggers automatically
    SELECT * FROM citus_local_table_triggers;
         tgname         |                  tgrelid                  | tgenabled
---------------------------------------------------------------------
 truncate_trigger_xxxxxxx | "interesting!schema"."citus_local!_table" | O
(1 row)

ROLLBACK;
-- ALTER TRIGGER RENAME
ALTER TRIGGER "trigger\'name" ON "interesting!schema"."citus_local!_table" RENAME TO "trigger\'name22";
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1507006, 'interesting!schema', E'ALTER TRIGGER "trigger\\''name" ON "interesting!schema"."citus_local!_table" RENAME TO "trigger\\''name22";')
-- show that triggers on both shell relation and shard relation are renamed
SELECT * FROM citus_local_table_triggers;
         tgname          |                      tgrelid                      | tgenabled
---------------------------------------------------------------------
 trigger\'name22         | "interesting!schema"."citus_local!_table"         | O
 trigger\'name22_1507006 | "interesting!schema"."citus_local!_table_1507006" | O
 truncate_trigger_xxxxxxx  | "interesting!schema"."citus_local!_table"         | O
(3 rows)

-- ALTER TABLE DISABLE trigger
ALTER TABLE "interesting!schema"."citus_local!_table" DISABLE TRIGGER "trigger\'name22";
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1507006, 'interesting!schema', E'ALTER TABLE "interesting!schema"."citus_local!_table" DISABLE TRIGGER "trigger\\''name22";')
SELECT * FROM citus_local_table_triggers;
         tgname          |                      tgrelid                      | tgenabled
---------------------------------------------------------------------
 trigger\'name22         | "interesting!schema"."citus_local!_table"         | D
 trigger\'name22_1507006 | "interesting!schema"."citus_local!_table_1507006" | D
 truncate_trigger_xxxxxxx  | "interesting!schema"."citus_local!_table"         | O
(3 rows)

-- ALTER TABLE ENABLE trigger
ALTER TABLE "interesting!schema"."citus_local!_table" ENABLE TRIGGER "trigger\'name22";
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1507006, 'interesting!schema', E'ALTER TABLE "interesting!schema"."citus_local!_table" ENABLE TRIGGER "trigger\\''name22";')
SELECT * FROM citus_local_table_triggers;
         tgname          |                      tgrelid                      | tgenabled
---------------------------------------------------------------------
 trigger\'name22         | "interesting!schema"."citus_local!_table"         | O
 trigger\'name22_1507006 | "interesting!schema"."citus_local!_table_1507006" | O
 truncate_trigger_xxxxxxx  | "interesting!schema"."citus_local!_table"         | O
(3 rows)

CREATE TRIGGER another_trigger
AFTER DELETE ON "interesting!schema"."citus_local!_table"
FOR EACH STATEMENT EXECUTE PROCEDURE dummy_function();
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1507006, 'interesting!schema', 'CREATE TRIGGER another_trigger
AFTER DELETE ON "interesting!schema"."citus_local!_table"
FOR EACH STATEMENT EXECUTE PROCEDURE dummy_function();')
ALTER TABLE "interesting!schema"."citus_local!_table" DISABLE TRIGGER USER;
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1507006, 'interesting!schema', 'ALTER TABLE "interesting!schema"."citus_local!_table" DISABLE TRIGGER USER;')
-- show that all triggers except the internal ones are disabled
SELECT * FROM citus_local_table_triggers;
         tgname          |                      tgrelid                      | tgenabled
---------------------------------------------------------------------
 another_trigger         | "interesting!schema"."citus_local!_table"         | D
 another_trigger_1507006 | "interesting!schema"."citus_local!_table_1507006" | D
 trigger\'name22         | "interesting!schema"."citus_local!_table"         | D
 trigger\'name22_1507006 | "interesting!schema"."citus_local!_table_1507006" | D
 truncate_trigger_xxxxxxx  | "interesting!schema"."citus_local!_table"         | O
(5 rows)

ALTER TABLE "interesting!schema"."citus_local!_table" ENABLE TRIGGER USER;
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1507006, 'interesting!schema', 'ALTER TABLE "interesting!schema"."citus_local!_table" ENABLE TRIGGER USER;')
-- show that all triggers except the internal ones are enabled again
SELECT * FROM citus_local_table_triggers;
         tgname          |                      tgrelid                      | tgenabled
---------------------------------------------------------------------
 another_trigger         | "interesting!schema"."citus_local!_table"         | O
 another_trigger_1507006 | "interesting!schema"."citus_local!_table_1507006" | O
 trigger\'name22         | "interesting!schema"."citus_local!_table"         | O
 trigger\'name22_1507006 | "interesting!schema"."citus_local!_table_1507006" | O
 truncate_trigger_xxxxxxx  | "interesting!schema"."citus_local!_table"         | O
(5 rows)

ALTER TABLE "interesting!schema"."citus_local!_table" DISABLE TRIGGER ALL;
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1507006, 'interesting!schema', 'ALTER TABLE "interesting!schema"."citus_local!_table" DISABLE TRIGGER ALL;')
-- show that all triggers including internal triggers are disabled
SELECT * FROM citus_local_table_triggers;
         tgname          |                      tgrelid                      | tgenabled
---------------------------------------------------------------------
 another_trigger         | "interesting!schema"."citus_local!_table"         | D
 another_trigger_1507006 | "interesting!schema"."citus_local!_table_1507006" | D
 trigger\'name22         | "interesting!schema"."citus_local!_table"         | D
 trigger\'name22_1507006 | "interesting!schema"."citus_local!_table_1507006" | D
 truncate_trigger_xxxxxxx  | "interesting!schema"."citus_local!_table"         | D
(5 rows)

ALTER TABLE "interesting!schema"."citus_local!_table" ENABLE TRIGGER ALL;
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1507006, 'interesting!schema', 'ALTER TABLE "interesting!schema"."citus_local!_table" ENABLE TRIGGER ALL;')
-- show that all triggers including internal triggers are enabled again
SELECT * FROM citus_local_table_triggers;
         tgname          |                      tgrelid                      | tgenabled
---------------------------------------------------------------------
 another_trigger         | "interesting!schema"."citus_local!_table"         | O
 another_trigger_1507006 | "interesting!schema"."citus_local!_table_1507006" | O
 trigger\'name22         | "interesting!schema"."citus_local!_table"         | O
 trigger\'name22_1507006 | "interesting!schema"."citus_local!_table_1507006" | O
 truncate_trigger_xxxxxxx  | "interesting!schema"."citus_local!_table"         | O
(5 rows)

-- cleanup at exit
DROP SCHEMA citus_local_table_triggers, "interesting!schema" CASCADE;
NOTICE:  drop cascades to 13 other objects
