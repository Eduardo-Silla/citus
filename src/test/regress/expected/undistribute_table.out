SET citus.shard_count TO 4;
SET citus.shard_replication_factor TO 1;
CREATE TABLE dist_table (id INT, a INT, b TEXT);
SELECT create_distributed_table('dist_table', 'id');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

INSERT INTO dist_table VALUES (1, 2, 'abc'), (2, 3, 'abcd'), (1, 3, 'abc');
SELECT logicalrelid FROM pg_dist_partition WHERE logicalrelid = 'dist_table'::regclass;
 logicalrelid
---------------------------------------------------------------------
 dist_table
(1 row)

SELECT run_command_on_workers($$SELECT COUNT(*) FROM pg_catalog.pg_class WHERE relname LIKE 'dist\_table\_%'$$);
 run_command_on_workers
---------------------------------------------------------------------
 (localhost,57637,t,2)
 (localhost,57638,t,2)
(2 rows)

SELECT * FROM dist_table ORDER BY 1, 2, 3;
 id | a |  b
---------------------------------------------------------------------
  1 | 2 | abc
  1 | 3 | abc
  2 | 3 | abcd
(3 rows)

SELECT undistribute_table('dist_table');
 undistribute_table
---------------------------------------------------------------------
 t
(1 row)

SELECT logicalrelid FROM pg_dist_partition WHERE logicalrelid = 'dist_table'::regclass;
 logicalrelid
---------------------------------------------------------------------
(0 rows)

SELECT run_command_on_workers($$SELECT COUNT(*) FROM pg_catalog.pg_class WHERE relname LIKE 'dist\_table\_%'$$);
 run_command_on_workers
---------------------------------------------------------------------
 (localhost,57637,t,0)
 (localhost,57638,t,0)
(2 rows)

SELECT * FROM dist_table ORDER BY 1, 2, 3;
 id | a |  b
---------------------------------------------------------------------
  1 | 2 | abc
  1 | 3 | abc
  2 | 3 | abcd
(3 rows)

DROP TABLE dist_table;
-- test indexes
CREATE TABLE dist_table (id INT, a INT, b TEXT);
SELECT create_distributed_table('dist_table', 'id');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

INSERT INTO dist_table VALUES (1, 2, 'abc'), (2, 3, 'abcd'), (1, 3, 'abc');
CREATE INDEX index1 ON dist_table (id);
SELECT * FROM pg_indexes WHERE tablename = 'dist_table';
 schemaname | tablename  | indexname | tablespace |                         indexdef
---------------------------------------------------------------------
 public     | dist_table | index1    |            | CREATE INDEX index1 ON public.dist_table USING btree (id)
(1 row)

SELECT undistribute_table('dist_table');
 undistribute_table
---------------------------------------------------------------------
 t
(1 row)

SELECT * FROM pg_indexes WHERE tablename = 'dist_table';
 schemaname | tablename  | indexname | tablespace |                         indexdef
---------------------------------------------------------------------
 public     | dist_table | index1    |            | CREATE INDEX index1 ON public.dist_table USING btree (id)
(1 row)

DROP TABLE dist_table;
-- test tables with references
-- we expect errors
CREATE TABLE referenced_table (id INT PRIMARY KEY, a INT, b TEXT);
SELECT create_distributed_table('referenced_table', 'id');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

INSERT INTO referenced_table VALUES (1, 2, 'abc'), (2, 3, 'abcd'), (4, 3, 'abc');
CREATE TABLE referencing_table (id INT REFERENCES referenced_table (id), a INT, b TEXT);
SELECT create_distributed_table('referencing_table', 'id');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

INSERT INTO referencing_table VALUES (4, 6, 'cba'), (1, 1, 'dcba'), (2, 3, 'aaa');
SELECT undistribute_table('referenced_table');
ERROR:  Cannot undistribute table because a foreign key references to it.
SELECT undistribute_table('referencing_table');
ERROR:  Cannot undistribute table because it has a foreign key.
DROP TABLE referenced_table, referencing_table;
-- test partitioned tables
-- we expect error
CREATE TABLE partitioned_table (id INT, a INT) PARTITION BY RANGE (id);
SELECT create_distributed_table('partitioned_table', 'id');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

SELECT undistribute_table('partitioned_table');
ERROR:  Cannot undistribute partitioned tables.
-- test tables with sequences
CREATE TABLE seq_table (id INT, a bigserial);
SELECT create_distributed_table('seq_table', 'id');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

SELECT objid::regclass AS "Sequence Name" FROM pg_depend WHERE refobjid = 'seq_table'::regclass::oid AND classid = 'pg_class'::regclass::oid;
  Sequence Name
---------------------------------------------------------------------
 seq_table_a_seq
(1 row)

INSERT INTO seq_table (id) VALUES (5), (9), (3);
SELECT * FROM seq_table ORDER BY a;
 id | a
---------------------------------------------------------------------
  5 | 1
  9 | 2
  3 | 3
(3 rows)

SELECT undistribute_table('seq_table');
 undistribute_table
---------------------------------------------------------------------
 t
(1 row)

SELECT objid::regclass AS "Sequence Name" FROM pg_depend WHERE refobjid = 'seq_table'::regclass::oid AND classid = 'pg_class'::regclass::oid;
  Sequence Name
---------------------------------------------------------------------
 seq_table_a_seq
(1 row)

INSERT INTO seq_table (id) VALUES (7), (1), (8);
SELECT * FROM seq_table ORDER BY a;
 id | a
---------------------------------------------------------------------
  5 | 1
  9 | 2
  3 | 3
  7 | 4
  1 | 5
  8 | 6
(6 rows)

